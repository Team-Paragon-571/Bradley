// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;

import edu.wpi.first.wpilibj2.command.SubsystemBase;
import static frc.robot.Constants.DriveConstants.*;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;

import com.ctre.phoenix.motorcontrol.InvertType;
// import edu.wpi.first.wpilibj.motorcontrol.WPI_TalonFX;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class Drive extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private WPI_TalonFX lFront;
    private WPI_TalonFX  lFollower;
    private MotorControllerGroup leftMotors;
    private WPI_TalonFX rFront;
    private WPI_TalonFX rFollower;
    private MotorControllerGroup rightMotors;
    private DifferentialDrive differentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    /**
    *
    */
    public Drive() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        lFront = new WPI_TalonFX(1);
        rFront = new WPI_TalonFX(3);
        
        lFront.setInverted(true);
        rFront.setInverted(false);

        addChild("lFront", lFront);
        addChild("rFront", rFront);

        lFollower = new WPI_TalonFX(2);
        rFollower = new WPI_TalonFX(4);
        
        addChild("lFollower", lFollower);
        addChild("rFollower", rFollower);
        
        lFollower.follow(lFront);
        rFollower.follow(rFront);

        lFollower.setInverted(InvertType.FollowMaster);
        rFollower.setInverted(InvertType.FollowMaster);

        differentialDrive = new DifferentialDrive(lFront, rFront);
        addChild("DifferentialDrive", differentialDrive);
        differentialDrive.setSafetyEnabled(true);
        differentialDrive.setExpiration(0.1);
        differentialDrive.setMaxOutput(1.0);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    /**
     * Cheesy driving for the drivetrain.
     * 
     * @param speed      robot Speed from [-1.0..1.0]
     * @param curvature  robot turn radius from [-1.0..1.0]
     * @param isSpinning whether or not the robot is spinning in place
     */
    public void drive(double speed, double curvature, boolean isSpinning) {
        differentialDrive.curvatureDrive(speed, curvature, isSpinning);
    }

}
